// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

package example

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RankingRequest struct {
	// for instance user_id
	Context              *Entity         `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	Candidates           []*Entity       `protobuf:"bytes,2,rep,name=candidates,proto3" json:"candidates,omitempty"`
	Options              *RequestOptions `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RankingRequest) Reset()         { *m = RankingRequest{} }
func (m *RankingRequest) String() string { return proto.CompactTextString(m) }
func (*RankingRequest) ProtoMessage()    {}
func (*RankingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0}
}

func (m *RankingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankingRequest.Unmarshal(m, b)
}
func (m *RankingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankingRequest.Marshal(b, m, deterministic)
}
func (m *RankingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankingRequest.Merge(m, src)
}
func (m *RankingRequest) XXX_Size() int {
	return xxx_messageInfo_RankingRequest.Size(m)
}
func (m *RankingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RankingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RankingRequest proto.InternalMessageInfo

func (m *RankingRequest) GetContext() *Entity {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *RankingRequest) GetCandidates() []*Entity {
	if m != nil {
		return m.Candidates
	}
	return nil
}

func (m *RankingRequest) GetOptions() *RequestOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

// for instance features, candidates
type Entity struct {
	Id                   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Features             map[string]*Feature `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Score                float64             `protobuf:"fixed64,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{1}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Entity) GetFeatures() map[string]*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *Entity) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type Feature struct {
	// Types that are valid to be assigned to Value:
	//	*Feature_AsString
	//	*Feature_AsInt
	//	*Feature_AsFloat
	//	*Feature_AsBool
	//	*Feature_AsStringArray
	//	*Feature_AsIntArray
	Value                isFeature_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{2}
}

func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (m *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(m, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

type isFeature_Value interface {
	isFeature_Value()
}

type Feature_AsString struct {
	AsString string `protobuf:"bytes,1,opt,name=as_string,json=asString,proto3,oneof"`
}

type Feature_AsInt struct {
	AsInt int64 `protobuf:"varint,2,opt,name=as_int,json=asInt,proto3,oneof"`
}

type Feature_AsFloat struct {
	AsFloat float64 `protobuf:"fixed64,3,opt,name=as_float,json=asFloat,proto3,oneof"`
}

type Feature_AsBool struct {
	AsBool bool `protobuf:"varint,4,opt,name=as_bool,json=asBool,proto3,oneof"`
}

type Feature_AsStringArray struct {
	AsStringArray *StringArray `protobuf:"bytes,5,opt,name=as_string_array,json=asStringArray,proto3,oneof"`
}

type Feature_AsIntArray struct {
	AsIntArray *IntArray `protobuf:"bytes,6,opt,name=as_int_array,json=asIntArray,proto3,oneof"`
}

func (*Feature_AsString) isFeature_Value() {}

func (*Feature_AsInt) isFeature_Value() {}

func (*Feature_AsFloat) isFeature_Value() {}

func (*Feature_AsBool) isFeature_Value() {}

func (*Feature_AsStringArray) isFeature_Value() {}

func (*Feature_AsIntArray) isFeature_Value() {}

func (m *Feature) GetValue() isFeature_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Feature) GetAsString() string {
	if x, ok := m.GetValue().(*Feature_AsString); ok {
		return x.AsString
	}
	return ""
}

func (m *Feature) GetAsInt() int64 {
	if x, ok := m.GetValue().(*Feature_AsInt); ok {
		return x.AsInt
	}
	return 0
}

func (m *Feature) GetAsFloat() float64 {
	if x, ok := m.GetValue().(*Feature_AsFloat); ok {
		return x.AsFloat
	}
	return 0
}

func (m *Feature) GetAsBool() bool {
	if x, ok := m.GetValue().(*Feature_AsBool); ok {
		return x.AsBool
	}
	return false
}

func (m *Feature) GetAsStringArray() *StringArray {
	if x, ok := m.GetValue().(*Feature_AsStringArray); ok {
		return x.AsStringArray
	}
	return nil
}

func (m *Feature) GetAsIntArray() *IntArray {
	if x, ok := m.GetValue().(*Feature_AsIntArray); ok {
		return x.AsIntArray
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Feature) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Feature_AsString)(nil),
		(*Feature_AsInt)(nil),
		(*Feature_AsFloat)(nil),
		(*Feature_AsBool)(nil),
		(*Feature_AsStringArray)(nil),
		(*Feature_AsIntArray)(nil),
	}
}

type StringArray struct {
	Value                []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringArray) Reset()         { *m = StringArray{} }
func (m *StringArray) String() string { return proto.CompactTextString(m) }
func (*StringArray) ProtoMessage()    {}
func (*StringArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{3}
}

func (m *StringArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringArray.Unmarshal(m, b)
}
func (m *StringArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringArray.Marshal(b, m, deterministic)
}
func (m *StringArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringArray.Merge(m, src)
}
func (m *StringArray) XXX_Size() int {
	return xxx_messageInfo_StringArray.Size(m)
}
func (m *StringArray) XXX_DiscardUnknown() {
	xxx_messageInfo_StringArray.DiscardUnknown(m)
}

var xxx_messageInfo_StringArray proto.InternalMessageInfo

func (m *StringArray) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type IntArray struct {
	Value                []int64  `protobuf:"varint,1,rep,packed,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntArray) Reset()         { *m = IntArray{} }
func (m *IntArray) String() string { return proto.CompactTextString(m) }
func (*IntArray) ProtoMessage()    {}
func (*IntArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{4}
}

func (m *IntArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntArray.Unmarshal(m, b)
}
func (m *IntArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntArray.Marshal(b, m, deterministic)
}
func (m *IntArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntArray.Merge(m, src)
}
func (m *IntArray) XXX_Size() int {
	return xxx_messageInfo_IntArray.Size(m)
}
func (m *IntArray) XXX_DiscardUnknown() {
	xxx_messageInfo_IntArray.DiscardUnknown(m)
}

var xxx_messageInfo_IntArray proto.InternalMessageInfo

func (m *IntArray) GetValue() []int64 {
	if m != nil {
		return m.Value
	}
	return nil
}

type RequestOptions struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestOptions) Reset()         { *m = RequestOptions{} }
func (m *RequestOptions) String() string { return proto.CompactTextString(m) }
func (*RequestOptions) ProtoMessage()    {}
func (*RequestOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{5}
}

func (m *RequestOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestOptions.Unmarshal(m, b)
}
func (m *RequestOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestOptions.Marshal(b, m, deterministic)
}
func (m *RequestOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestOptions.Merge(m, src)
}
func (m *RequestOptions) XXX_Size() int {
	return xxx_messageInfo_RequestOptions.Size(m)
}
func (m *RequestOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestOptions.DiscardUnknown(m)
}

var xxx_messageInfo_RequestOptions proto.InternalMessageInfo

func (m *RequestOptions) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func init() {
	proto.RegisterType((*RankingRequest)(nil), "RankingRequest")
	proto.RegisterType((*Entity)(nil), "Entity")
	proto.RegisterMapType((map[string]*Feature)(nil), "Entity.FeaturesEntry")
	proto.RegisterType((*Feature)(nil), "Feature")
	proto.RegisterType((*StringArray)(nil), "StringArray")
	proto.RegisterType((*IntArray)(nil), "IntArray")
	proto.RegisterType((*RequestOptions)(nil), "RequestOptions")
}

func init() { proto.RegisterFile("example.proto", fileDescriptor_15a1dc8d40dadaa6) }

var fileDescriptor_15a1dc8d40dadaa6 = []byte{
	// 475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xdd, 0x6e, 0xd3, 0x3c,
	0x18, 0xce, 0xcf, 0xf2, 0xd3, 0x77, 0x6b, 0xfb, 0xc9, 0xda, 0x07, 0xa1, 0x13, 0x28, 0x04, 0x09,
	0xca, 0x01, 0x9e, 0x18, 0x12, 0x42, 0x88, 0x13, 0x26, 0x75, 0xca, 0x8e, 0x90, 0xcc, 0x05, 0x44,
	0x6e, 0xeb, 0x76, 0xd6, 0x52, 0xbb, 0x8b, 0x5d, 0xb4, 0x5c, 0x01, 0xb7, 0xc2, 0xad, 0x71, 0x17,
	0x28, 0x76, 0x5c, 0xb5, 0x48, 0x9c, 0xe5, 0x7d, 0xfc, 0x3e, 0x3f, 0x7a, 0xf3, 0xc0, 0x90, 0x3d,
	0xd2, 0xcd, 0xb6, 0x66, 0x78, 0xdb, 0x48, 0x2d, 0x27, 0x17, 0x6b, 0x29, 0xd7, 0x35, 0xbb, 0x34,
	0xd3, 0x7c, 0xb7, 0xba, 0x64, 0x9b, 0xad, 0x6e, 0xed, 0x63, 0xf1, 0xd3, 0x87, 0x11, 0xa1, 0xe2,
	0x9e, 0x8b, 0x35, 0x61, 0x0f, 0x3b, 0xa6, 0x34, 0x7a, 0x09, 0xc9, 0x42, 0x0a, 0xcd, 0x1e, 0x75,
	0xe6, 0xe7, 0xfe, 0xf4, 0xf4, 0x2a, 0xc1, 0x33, 0xa1, 0xb9, 0x6e, 0x89, 0xc3, 0xd1, 0x1b, 0x80,
	0x05, 0x15, 0x4b, 0xbe, 0xa4, 0x9a, 0xa9, 0x2c, 0xc8, 0xc3, 0xc3, 0xad, 0x83, 0x27, 0xf4, 0x16,
	0x12, 0xb9, 0xd5, 0x5c, 0x0a, 0x95, 0x85, 0x46, 0x6b, 0x8c, 0x7b, 0x9b, 0x6f, 0x16, 0x26, 0xee,
	0xbd, 0xf8, 0xe5, 0x43, 0x6c, 0x15, 0xd0, 0x08, 0x02, 0xbe, 0x34, 0xe6, 0x03, 0x12, 0xf0, 0x25,
	0x7a, 0x0f, 0xe9, 0x8a, 0x51, 0xbd, 0x6b, 0xf6, 0x66, 0xff, 0xf7, 0x66, 0xf8, 0xa6, 0xc7, 0x67,
	0x42, 0x37, 0x2d, 0xd9, 0xaf, 0xa1, 0x73, 0x88, 0xd4, 0x42, 0x36, 0xcc, 0xd8, 0xfa, 0xc4, 0x0e,
	0x93, 0x19, 0x0c, 0x8f, 0x08, 0xe8, 0x3f, 0x08, 0xef, 0x59, 0xdb, 0x5b, 0x75, 0x9f, 0xe8, 0x05,
	0x44, 0x3f, 0x68, 0xbd, 0x63, 0x59, 0x60, 0xf2, 0xa6, 0xce, 0x81, 0x58, 0xf8, 0x73, 0xf0, 0xc9,
	0x2f, 0x7e, 0xfb, 0x90, 0xf4, 0x30, 0x7a, 0x0e, 0x03, 0xaa, 0x2a, 0xa5, 0x1b, 0x2e, 0xd6, 0x56,
	0xa7, 0xf4, 0x48, 0x4a, 0xd5, 0x77, 0x83, 0xa0, 0xa7, 0x10, 0x53, 0x55, 0x71, 0xa1, 0x8d, 0x5e,
	0x58, 0x7a, 0x24, 0xa2, 0xea, 0x56, 0x68, 0x74, 0x01, 0x29, 0x55, 0xd5, 0xaa, 0x96, 0x54, 0xdb,
	0x8c, 0xa5, 0x47, 0x12, 0xaa, 0x6e, 0x3a, 0x00, 0x3d, 0x83, 0x84, 0xaa, 0x6a, 0x2e, 0x65, 0x9d,
	0x9d, 0xe4, 0xfe, 0x34, 0x2d, 0x3d, 0x12, 0x53, 0x75, 0x2d, 0x65, 0x8d, 0x3e, 0xc2, 0x78, 0xef,
	0x57, 0xd1, 0xa6, 0xa1, 0x6d, 0x16, 0x99, 0xa4, 0x67, 0xd8, 0x5a, 0x7e, 0xed, 0xb0, 0xd2, 0x23,
	0x43, 0x97, 0xc1, 0x00, 0xe8, 0x1d, 0x9c, 0xd9, 0x20, 0x3d, 0x29, 0x36, 0xa4, 0x01, 0xbe, 0x15,
	0xda, 0x31, 0xc0, 0x24, 0x33, 0xd3, 0x75, 0xd2, 0x9f, 0xa1, 0x78, 0x05, 0xa7, 0x87, 0x32, 0xe7,
	0xee, 0x3c, 0x7e, 0x1e, 0x4e, 0x07, 0xfd, 0x51, 0x8a, 0x1c, 0x52, 0xc7, 0x3c, 0xde, 0x08, 0xdd,
	0xc6, 0x6b, 0x18, 0x1d, 0xff, 0xf8, 0x6e, 0xaf, 0xe6, 0x1b, 0x6e, 0x4b, 0x16, 0x11, 0x3b, 0x5c,
	0x3d, 0x40, 0xd2, 0xd7, 0x11, 0x7d, 0x01, 0xe0, 0xaa, 0xba, 0x63, 0xb4, 0xd6, 0x77, 0x2d, 0x7a,
	0x82, 0x6d, 0x8d, 0xb1, 0xab, 0x31, 0x9e, 0x75, 0x35, 0x9e, 0xfc, 0x03, 0x47, 0x53, 0x38, 0xe9,
	0x84, 0xd0, 0x18, 0x1f, 0xd7, 0x7b, 0xf2, 0x37, 0x30, 0x8f, 0x0d, 0xf3, 0xc3, 0x9f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xcc, 0x68, 0xaf, 0x93, 0x37, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RankingClient is the client API for Ranking service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RankingClient interface {
	IsHealthy(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	Rank(ctx context.Context, in *RankingRequest, opts ...grpc.CallOption) (*RankingRequest, error)
}

type rankingClient struct {
	cc *grpc.ClientConn
}

func NewRankingClient(cc *grpc.ClientConn) RankingClient {
	return &rankingClient{cc}
}

func (c *rankingClient) IsHealthy(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Ranking/is_healthy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rankingClient) Rank(ctx context.Context, in *RankingRequest, opts ...grpc.CallOption) (*RankingRequest, error) {
	out := new(RankingRequest)
	err := c.cc.Invoke(ctx, "/Ranking/Rank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RankingServer is the server API for Ranking service.
type RankingServer interface {
	IsHealthy(context.Context, *empty.Empty) (*empty.Empty, error)
	Rank(context.Context, *RankingRequest) (*RankingRequest, error)
}

// UnimplementedRankingServer can be embedded to have forward compatible implementations.
type UnimplementedRankingServer struct {
}

func (*UnimplementedRankingServer) IsHealthy(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsHealthy not implemented")
}
func (*UnimplementedRankingServer) Rank(ctx context.Context, req *RankingRequest) (*RankingRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rank not implemented")
}

func RegisterRankingServer(s *grpc.Server, srv RankingServer) {
	s.RegisterService(&_Ranking_serviceDesc, srv)
}

func _Ranking_IsHealthy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RankingServer).IsHealthy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ranking/IsHealthy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RankingServer).IsHealthy(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Ranking_Rank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RankingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RankingServer).Rank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Ranking/Rank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RankingServer).Rank(ctx, req.(*RankingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ranking_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Ranking",
	HandlerType: (*RankingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "is_healthy",
			Handler:    _Ranking_IsHealthy_Handler,
		},
		{
			MethodName: "Rank",
			Handler:    _Ranking_Rank_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example.proto",
}
